// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: earthBaseToRoverComm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "earthBaseToRoverComm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ORION_COMM {
namespace QUERY {
class InputDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InputDevice> {
} _InputDevice_default_instance_;
class QueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Query> {
  public:
  const ::ORION_COMM::QUERY::InputDevice* input_;
} _Query_default_instance_;

namespace protobuf_earthBaseToRoverComm_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, x_axis_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, y_axis_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, x_axis_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, y_axis_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, x_axis_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, y_axis_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputDevice, button_12_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, mode_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Query_default_instance_), input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, cmd_content_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(InputDevice)},
  { 24, -1, sizeof(Query)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_InputDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Query_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "earthBaseToRoverComm.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _InputDevice_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Query_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ORION_COMM::protobuf_protocolEnums_2eproto::InitDefaults();
  _InputDevice_default_instance_.DefaultConstruct();
  _Query_default_instance_.DefaultConstruct();
  _Query_default_instance_.input_ = const_cast< ::ORION_COMM::QUERY::InputDevice*>(
      ::ORION_COMM::QUERY::InputDevice::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\032earthBaseToRoverComm.proto\022\020ORION_COMM"
      ".QUERY\032\023protocolEnums.proto\"\346\002\n\013InputDev"
      "ice\022\020\n\010x_axis_0\030\001 \001(\001\022\020\n\010y_axis_0\030\002 \001(\001\022"
      "\020\n\010x_axis_1\030\003 \001(\001\022\020\n\010y_axis_1\030\004 \001(\001\022\020\n\010b"
      "utton_0\030\005 \001(\010\022\020\n\010button_1\030\006 \001(\010\022\020\n\010butto"
      "n_2\030\007 \001(\010\022\020\n\010button_3\030\010 \001(\010\022\020\n\010button_4\030"
      "\t \001(\010\022\020\n\010button_5\030\n \001(\010\022\020\n\010button_6\030\013 \001("
      "\010\022\020\n\010button_7\030\014 \001(\010\022\020\n\010button_8\030\r \001(\010\022\020\n"
      "\010x_axis_2\030\016 \001(\001\022\020\n\010y_axis_2\030\017 \001(\001\022\020\n\010but"
      "ton_9\030\020 \001(\010\022\021\n\tbutton_10\030\021 \001(\010\022\021\n\tbutton"
      "_11\030\022 \001(\010\022\021\n\tbutton_12\030\023 \001(\010\"\255\001\n\005Query\022!"
      "\n\003cmd\030\001 \001(\0162\024.ORION_COMM.CMD_TYPE\022\"\n\006mod"
      "ule\030\002 \001(\0162\022.ORION_COMM.MODULE\022\036\n\004mode\030\003 "
      "\001(\0162\020.ORION_COMM.MODE\022.\n\005input\030\004 \001(\0132\035.O"
      "RION_COMM.QUERY.InputDeviceH\000B\r\n\013cmd_con"
      "tentb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 612);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "earthBaseToRoverComm.proto", &protobuf_RegisterTypes);
  ::ORION_COMM::protobuf_protocolEnums_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_earthBaseToRoverComm_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputDevice::kXAxis0FieldNumber;
const int InputDevice::kYAxis0FieldNumber;
const int InputDevice::kXAxis1FieldNumber;
const int InputDevice::kYAxis1FieldNumber;
const int InputDevice::kButton0FieldNumber;
const int InputDevice::kButton1FieldNumber;
const int InputDevice::kButton2FieldNumber;
const int InputDevice::kButton3FieldNumber;
const int InputDevice::kButton4FieldNumber;
const int InputDevice::kButton5FieldNumber;
const int InputDevice::kButton6FieldNumber;
const int InputDevice::kButton7FieldNumber;
const int InputDevice::kButton8FieldNumber;
const int InputDevice::kXAxis2FieldNumber;
const int InputDevice::kYAxis2FieldNumber;
const int InputDevice::kButton9FieldNumber;
const int InputDevice::kButton10FieldNumber;
const int InputDevice::kButton11FieldNumber;
const int InputDevice::kButton12FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputDevice::InputDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_earthBaseToRoverComm_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ORION_COMM.QUERY.InputDevice)
}
InputDevice::InputDevice(const InputDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_axis_0_, &from.x_axis_0_,
    reinterpret_cast<char*>(&button_12_) -
    reinterpret_cast<char*>(&x_axis_0_) + sizeof(button_12_));
  // @@protoc_insertion_point(copy_constructor:ORION_COMM.QUERY.InputDevice)
}

void InputDevice::SharedCtor() {
  ::memset(&x_axis_0_, 0, reinterpret_cast<char*>(&button_12_) -
    reinterpret_cast<char*>(&x_axis_0_) + sizeof(button_12_));
  _cached_size_ = 0;
}

InputDevice::~InputDevice() {
  // @@protoc_insertion_point(destructor:ORION_COMM.QUERY.InputDevice)
  SharedDtor();
}

void InputDevice::SharedDtor() {
}

void InputDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputDevice::descriptor() {
  protobuf_earthBaseToRoverComm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_earthBaseToRoverComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputDevice& InputDevice::default_instance() {
  protobuf_earthBaseToRoverComm_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputDevice* InputDevice::New(::google::protobuf::Arena* arena) const {
  InputDevice* n = new InputDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:ORION_COMM.QUERY.InputDevice)
  ::memset(&x_axis_0_, 0, reinterpret_cast<char*>(&button_12_) -
    reinterpret_cast<char*>(&x_axis_0_) + sizeof(button_12_));
}

bool InputDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ORION_COMM.QUERY.InputDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x_axis_0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_axis_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y_axis_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_axis_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x_axis_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_axis_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y_axis_1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_axis_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_0 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_5 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_6 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_7 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_8 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x_axis_2 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_axis_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y_axis_2 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_axis_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_9 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_10 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_11 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool button_12 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &button_12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ORION_COMM.QUERY.InputDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ORION_COMM.QUERY.InputDevice)
  return false;
#undef DO_
}

void InputDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ORION_COMM.QUERY.InputDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x_axis_0 = 1;
  if (this->x_axis_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x_axis_0(), output);
  }

  // double y_axis_0 = 2;
  if (this->y_axis_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y_axis_0(), output);
  }

  // double x_axis_1 = 3;
  if (this->x_axis_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x_axis_1(), output);
  }

  // double y_axis_1 = 4;
  if (this->y_axis_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y_axis_1(), output);
  }

  // bool button_0 = 5;
  if (this->button_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->button_0(), output);
  }

  // bool button_1 = 6;
  if (this->button_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->button_1(), output);
  }

  // bool button_2 = 7;
  if (this->button_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->button_2(), output);
  }

  // bool button_3 = 8;
  if (this->button_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->button_3(), output);
  }

  // bool button_4 = 9;
  if (this->button_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->button_4(), output);
  }

  // bool button_5 = 10;
  if (this->button_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->button_5(), output);
  }

  // bool button_6 = 11;
  if (this->button_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->button_6(), output);
  }

  // bool button_7 = 12;
  if (this->button_7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->button_7(), output);
  }

  // bool button_8 = 13;
  if (this->button_8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->button_8(), output);
  }

  // double x_axis_2 = 14;
  if (this->x_axis_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->x_axis_2(), output);
  }

  // double y_axis_2 = 15;
  if (this->y_axis_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->y_axis_2(), output);
  }

  // bool button_9 = 16;
  if (this->button_9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->button_9(), output);
  }

  // bool button_10 = 17;
  if (this->button_10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->button_10(), output);
  }

  // bool button_11 = 18;
  if (this->button_11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->button_11(), output);
  }

  // bool button_12 = 19;
  if (this->button_12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->button_12(), output);
  }

  // @@protoc_insertion_point(serialize_end:ORION_COMM.QUERY.InputDevice)
}

::google::protobuf::uint8* InputDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ORION_COMM.QUERY.InputDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x_axis_0 = 1;
  if (this->x_axis_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x_axis_0(), target);
  }

  // double y_axis_0 = 2;
  if (this->y_axis_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y_axis_0(), target);
  }

  // double x_axis_1 = 3;
  if (this->x_axis_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x_axis_1(), target);
  }

  // double y_axis_1 = 4;
  if (this->y_axis_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y_axis_1(), target);
  }

  // bool button_0 = 5;
  if (this->button_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->button_0(), target);
  }

  // bool button_1 = 6;
  if (this->button_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->button_1(), target);
  }

  // bool button_2 = 7;
  if (this->button_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->button_2(), target);
  }

  // bool button_3 = 8;
  if (this->button_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->button_3(), target);
  }

  // bool button_4 = 9;
  if (this->button_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->button_4(), target);
  }

  // bool button_5 = 10;
  if (this->button_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->button_5(), target);
  }

  // bool button_6 = 11;
  if (this->button_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->button_6(), target);
  }

  // bool button_7 = 12;
  if (this->button_7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->button_7(), target);
  }

  // bool button_8 = 13;
  if (this->button_8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->button_8(), target);
  }

  // double x_axis_2 = 14;
  if (this->x_axis_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->x_axis_2(), target);
  }

  // double y_axis_2 = 15;
  if (this->y_axis_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->y_axis_2(), target);
  }

  // bool button_9 = 16;
  if (this->button_9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->button_9(), target);
  }

  // bool button_10 = 17;
  if (this->button_10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->button_10(), target);
  }

  // bool button_11 = 18;
  if (this->button_11() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->button_11(), target);
  }

  // bool button_12 = 19;
  if (this->button_12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->button_12(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ORION_COMM.QUERY.InputDevice)
  return target;
}

size_t InputDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ORION_COMM.QUERY.InputDevice)
  size_t total_size = 0;

  // double x_axis_0 = 1;
  if (this->x_axis_0() != 0) {
    total_size += 1 + 8;
  }

  // double y_axis_0 = 2;
  if (this->y_axis_0() != 0) {
    total_size += 1 + 8;
  }

  // double x_axis_1 = 3;
  if (this->x_axis_1() != 0) {
    total_size += 1 + 8;
  }

  // double y_axis_1 = 4;
  if (this->y_axis_1() != 0) {
    total_size += 1 + 8;
  }

  // bool button_0 = 5;
  if (this->button_0() != 0) {
    total_size += 1 + 1;
  }

  // bool button_1 = 6;
  if (this->button_1() != 0) {
    total_size += 1 + 1;
  }

  // bool button_2 = 7;
  if (this->button_2() != 0) {
    total_size += 1 + 1;
  }

  // bool button_3 = 8;
  if (this->button_3() != 0) {
    total_size += 1 + 1;
  }

  // bool button_4 = 9;
  if (this->button_4() != 0) {
    total_size += 1 + 1;
  }

  // bool button_5 = 10;
  if (this->button_5() != 0) {
    total_size += 1 + 1;
  }

  // bool button_6 = 11;
  if (this->button_6() != 0) {
    total_size += 1 + 1;
  }

  // bool button_7 = 12;
  if (this->button_7() != 0) {
    total_size += 1 + 1;
  }

  // double x_axis_2 = 14;
  if (this->x_axis_2() != 0) {
    total_size += 1 + 8;
  }

  // double y_axis_2 = 15;
  if (this->y_axis_2() != 0) {
    total_size += 1 + 8;
  }

  // bool button_8 = 13;
  if (this->button_8() != 0) {
    total_size += 1 + 1;
  }

  // bool button_9 = 16;
  if (this->button_9() != 0) {
    total_size += 2 + 1;
  }

  // bool button_10 = 17;
  if (this->button_10() != 0) {
    total_size += 2 + 1;
  }

  // bool button_11 = 18;
  if (this->button_11() != 0) {
    total_size += 2 + 1;
  }

  // bool button_12 = 19;
  if (this->button_12() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ORION_COMM.QUERY.InputDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const InputDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ORION_COMM.QUERY.InputDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ORION_COMM.QUERY.InputDevice)
    MergeFrom(*source);
  }
}

void InputDevice::MergeFrom(const InputDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ORION_COMM.QUERY.InputDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_axis_0() != 0) {
    set_x_axis_0(from.x_axis_0());
  }
  if (from.y_axis_0() != 0) {
    set_y_axis_0(from.y_axis_0());
  }
  if (from.x_axis_1() != 0) {
    set_x_axis_1(from.x_axis_1());
  }
  if (from.y_axis_1() != 0) {
    set_y_axis_1(from.y_axis_1());
  }
  if (from.button_0() != 0) {
    set_button_0(from.button_0());
  }
  if (from.button_1() != 0) {
    set_button_1(from.button_1());
  }
  if (from.button_2() != 0) {
    set_button_2(from.button_2());
  }
  if (from.button_3() != 0) {
    set_button_3(from.button_3());
  }
  if (from.button_4() != 0) {
    set_button_4(from.button_4());
  }
  if (from.button_5() != 0) {
    set_button_5(from.button_5());
  }
  if (from.button_6() != 0) {
    set_button_6(from.button_6());
  }
  if (from.button_7() != 0) {
    set_button_7(from.button_7());
  }
  if (from.x_axis_2() != 0) {
    set_x_axis_2(from.x_axis_2());
  }
  if (from.y_axis_2() != 0) {
    set_y_axis_2(from.y_axis_2());
  }
  if (from.button_8() != 0) {
    set_button_8(from.button_8());
  }
  if (from.button_9() != 0) {
    set_button_9(from.button_9());
  }
  if (from.button_10() != 0) {
    set_button_10(from.button_10());
  }
  if (from.button_11() != 0) {
    set_button_11(from.button_11());
  }
  if (from.button_12() != 0) {
    set_button_12(from.button_12());
  }
}

void InputDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ORION_COMM.QUERY.InputDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputDevice::CopyFrom(const InputDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ORION_COMM.QUERY.InputDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputDevice::IsInitialized() const {
  return true;
}

void InputDevice::Swap(InputDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputDevice::InternalSwap(InputDevice* other) {
  std::swap(x_axis_0_, other->x_axis_0_);
  std::swap(y_axis_0_, other->y_axis_0_);
  std::swap(x_axis_1_, other->x_axis_1_);
  std::swap(y_axis_1_, other->y_axis_1_);
  std::swap(button_0_, other->button_0_);
  std::swap(button_1_, other->button_1_);
  std::swap(button_2_, other->button_2_);
  std::swap(button_3_, other->button_3_);
  std::swap(button_4_, other->button_4_);
  std::swap(button_5_, other->button_5_);
  std::swap(button_6_, other->button_6_);
  std::swap(button_7_, other->button_7_);
  std::swap(x_axis_2_, other->x_axis_2_);
  std::swap(y_axis_2_, other->y_axis_2_);
  std::swap(button_8_, other->button_8_);
  std::swap(button_9_, other->button_9_);
  std::swap(button_10_, other->button_10_);
  std::swap(button_11_, other->button_11_);
  std::swap(button_12_, other->button_12_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputDevice::GetMetadata() const {
  protobuf_earthBaseToRoverComm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_earthBaseToRoverComm_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputDevice

// double x_axis_0 = 1;
void InputDevice::clear_x_axis_0() {
  x_axis_0_ = 0;
}
double InputDevice::x_axis_0() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.x_axis_0)
  return x_axis_0_;
}
void InputDevice::set_x_axis_0(double value) {
  
  x_axis_0_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.x_axis_0)
}

// double y_axis_0 = 2;
void InputDevice::clear_y_axis_0() {
  y_axis_0_ = 0;
}
double InputDevice::y_axis_0() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.y_axis_0)
  return y_axis_0_;
}
void InputDevice::set_y_axis_0(double value) {
  
  y_axis_0_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.y_axis_0)
}

// double x_axis_1 = 3;
void InputDevice::clear_x_axis_1() {
  x_axis_1_ = 0;
}
double InputDevice::x_axis_1() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.x_axis_1)
  return x_axis_1_;
}
void InputDevice::set_x_axis_1(double value) {
  
  x_axis_1_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.x_axis_1)
}

// double y_axis_1 = 4;
void InputDevice::clear_y_axis_1() {
  y_axis_1_ = 0;
}
double InputDevice::y_axis_1() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.y_axis_1)
  return y_axis_1_;
}
void InputDevice::set_y_axis_1(double value) {
  
  y_axis_1_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.y_axis_1)
}

// bool button_0 = 5;
void InputDevice::clear_button_0() {
  button_0_ = false;
}
bool InputDevice::button_0() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_0)
  return button_0_;
}
void InputDevice::set_button_0(bool value) {
  
  button_0_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_0)
}

// bool button_1 = 6;
void InputDevice::clear_button_1() {
  button_1_ = false;
}
bool InputDevice::button_1() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_1)
  return button_1_;
}
void InputDevice::set_button_1(bool value) {
  
  button_1_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_1)
}

// bool button_2 = 7;
void InputDevice::clear_button_2() {
  button_2_ = false;
}
bool InputDevice::button_2() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_2)
  return button_2_;
}
void InputDevice::set_button_2(bool value) {
  
  button_2_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_2)
}

// bool button_3 = 8;
void InputDevice::clear_button_3() {
  button_3_ = false;
}
bool InputDevice::button_3() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_3)
  return button_3_;
}
void InputDevice::set_button_3(bool value) {
  
  button_3_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_3)
}

// bool button_4 = 9;
void InputDevice::clear_button_4() {
  button_4_ = false;
}
bool InputDevice::button_4() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_4)
  return button_4_;
}
void InputDevice::set_button_4(bool value) {
  
  button_4_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_4)
}

// bool button_5 = 10;
void InputDevice::clear_button_5() {
  button_5_ = false;
}
bool InputDevice::button_5() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_5)
  return button_5_;
}
void InputDevice::set_button_5(bool value) {
  
  button_5_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_5)
}

// bool button_6 = 11;
void InputDevice::clear_button_6() {
  button_6_ = false;
}
bool InputDevice::button_6() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_6)
  return button_6_;
}
void InputDevice::set_button_6(bool value) {
  
  button_6_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_6)
}

// bool button_7 = 12;
void InputDevice::clear_button_7() {
  button_7_ = false;
}
bool InputDevice::button_7() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_7)
  return button_7_;
}
void InputDevice::set_button_7(bool value) {
  
  button_7_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_7)
}

// bool button_8 = 13;
void InputDevice::clear_button_8() {
  button_8_ = false;
}
bool InputDevice::button_8() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_8)
  return button_8_;
}
void InputDevice::set_button_8(bool value) {
  
  button_8_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_8)
}

// double x_axis_2 = 14;
void InputDevice::clear_x_axis_2() {
  x_axis_2_ = 0;
}
double InputDevice::x_axis_2() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.x_axis_2)
  return x_axis_2_;
}
void InputDevice::set_x_axis_2(double value) {
  
  x_axis_2_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.x_axis_2)
}

// double y_axis_2 = 15;
void InputDevice::clear_y_axis_2() {
  y_axis_2_ = 0;
}
double InputDevice::y_axis_2() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.y_axis_2)
  return y_axis_2_;
}
void InputDevice::set_y_axis_2(double value) {
  
  y_axis_2_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.y_axis_2)
}

// bool button_9 = 16;
void InputDevice::clear_button_9() {
  button_9_ = false;
}
bool InputDevice::button_9() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_9)
  return button_9_;
}
void InputDevice::set_button_9(bool value) {
  
  button_9_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_9)
}

// bool button_10 = 17;
void InputDevice::clear_button_10() {
  button_10_ = false;
}
bool InputDevice::button_10() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_10)
  return button_10_;
}
void InputDevice::set_button_10(bool value) {
  
  button_10_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_10)
}

// bool button_11 = 18;
void InputDevice::clear_button_11() {
  button_11_ = false;
}
bool InputDevice::button_11() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_11)
  return button_11_;
}
void InputDevice::set_button_11(bool value) {
  
  button_11_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_11)
}

// bool button_12 = 19;
void InputDevice::clear_button_12() {
  button_12_ = false;
}
bool InputDevice::button_12() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.InputDevice.button_12)
  return button_12_;
}
void InputDevice::set_button_12(bool value) {
  
  button_12_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.InputDevice.button_12)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kCmdFieldNumber;
const int Query::kModuleFieldNumber;
const int Query::kModeFieldNumber;
const int Query::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_earthBaseToRoverComm_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ORION_COMM.QUERY.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(mode_));
  clear_has_cmd_content();
  switch (from.cmd_content_case()) {
    case kInput: {
      mutable_input()->::ORION_COMM::QUERY::InputDevice::MergeFrom(from.input());
      break;
    }
    case CMD_CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ORION_COMM.QUERY.Query)
}

void Query::SharedCtor() {
  ::memset(&cmd_, 0, reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(mode_));
  clear_has_cmd_content();
  _cached_size_ = 0;
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:ORION_COMM.QUERY.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  if (has_cmd_content()) {
    clear_cmd_content();
  }
}

void Query::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  protobuf_earthBaseToRoverComm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_earthBaseToRoverComm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  protobuf_earthBaseToRoverComm_2eproto::InitDefaults();
  return *internal_default_instance();
}

Query* Query::New(::google::protobuf::Arena* arena) const {
  Query* n = new Query;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Query::clear_cmd_content() {
// @@protoc_insertion_point(one_of_clear_start:ORION_COMM.QUERY.Query)
  switch (cmd_content_case()) {
    case kInput: {
      delete cmd_content_.input_;
      break;
    }
    case CMD_CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CMD_CONTENT_NOT_SET;
}


void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:ORION_COMM.QUERY.Query)
  ::memset(&cmd_, 0, reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(mode_));
  clear_cmd_content();
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ORION_COMM.QUERY.Query)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ORION_COMM.CMD_TYPE cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::ORION_COMM::CMD_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ORION_COMM.MODULE module = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_module(static_cast< ::ORION_COMM::MODULE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ORION_COMM.MODE mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::ORION_COMM::MODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ORION_COMM.QUERY.InputDevice input = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ORION_COMM.QUERY.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ORION_COMM.QUERY.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ORION_COMM.QUERY.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ORION_COMM.CMD_TYPE cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // .ORION_COMM.MODULE module = 2;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->module(), output);
  }

  // .ORION_COMM.MODE mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->mode(), output);
  }

  // .ORION_COMM.QUERY.InputDevice input = 4;
  if (has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *cmd_content_.input_, output);
  }

  // @@protoc_insertion_point(serialize_end:ORION_COMM.QUERY.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ORION_COMM.QUERY.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ORION_COMM.CMD_TYPE cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // .ORION_COMM.MODULE module = 2;
  if (this->module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->module(), target);
  }

  // .ORION_COMM.MODE mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->mode(), target);
  }

  // .ORION_COMM.QUERY.InputDevice input = 4;
  if (has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *cmd_content_.input_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ORION_COMM.QUERY.Query)
  return target;
}

size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ORION_COMM.QUERY.Query)
  size_t total_size = 0;

  // .ORION_COMM.CMD_TYPE cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // .ORION_COMM.MODULE module = 2;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->module());
  }

  // .ORION_COMM.MODE mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  switch (cmd_content_case()) {
    // .ORION_COMM.QUERY.InputDevice input = 4;
    case kInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *cmd_content_.input_);
      break;
    }
    case CMD_CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ORION_COMM.QUERY.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ORION_COMM.QUERY.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ORION_COMM.QUERY.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ORION_COMM.QUERY.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  switch (from.cmd_content_case()) {
    case kInput: {
      mutable_input()->::ORION_COMM::QUERY::InputDevice::MergeFrom(from.input());
      break;
    }
    case CMD_CONTENT_NOT_SET: {
      break;
    }
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ORION_COMM.QUERY.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ORION_COMM.QUERY.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  std::swap(cmd_, other->cmd_);
  std::swap(module_, other->module_);
  std::swap(mode_, other->mode_);
  std::swap(cmd_content_, other->cmd_content_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_earthBaseToRoverComm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_earthBaseToRoverComm_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Query

// .ORION_COMM.CMD_TYPE cmd = 1;
void Query::clear_cmd() {
  cmd_ = 0;
}
::ORION_COMM::CMD_TYPE Query::cmd() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.Query.cmd)
  return static_cast< ::ORION_COMM::CMD_TYPE >(cmd_);
}
void Query::set_cmd(::ORION_COMM::CMD_TYPE value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.Query.cmd)
}

// .ORION_COMM.MODULE module = 2;
void Query::clear_module() {
  module_ = 0;
}
::ORION_COMM::MODULE Query::module() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.Query.module)
  return static_cast< ::ORION_COMM::MODULE >(module_);
}
void Query::set_module(::ORION_COMM::MODULE value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.Query.module)
}

// .ORION_COMM.MODE mode = 3;
void Query::clear_mode() {
  mode_ = 0;
}
::ORION_COMM::MODE Query::mode() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.Query.mode)
  return static_cast< ::ORION_COMM::MODE >(mode_);
}
void Query::set_mode(::ORION_COMM::MODE value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.QUERY.Query.mode)
}

// .ORION_COMM.QUERY.InputDevice input = 4;
bool Query::has_input() const {
  return cmd_content_case() == kInput;
}
void Query::set_has_input() {
  _oneof_case_[0] = kInput;
}
void Query::clear_input() {
  if (has_input()) {
    delete cmd_content_.input_;
    clear_has_cmd_content();
  }
}
 const ::ORION_COMM::QUERY::InputDevice& Query::input() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.QUERY.Query.input)
  return has_input()
      ? *cmd_content_.input_
      : ::ORION_COMM::QUERY::InputDevice::default_instance();
}
::ORION_COMM::QUERY::InputDevice* Query::mutable_input() {
  if (!has_input()) {
    clear_cmd_content();
    set_has_input();
    cmd_content_.input_ = new ::ORION_COMM::QUERY::InputDevice;
  }
  // @@protoc_insertion_point(field_mutable:ORION_COMM.QUERY.Query.input)
  return cmd_content_.input_;
}
::ORION_COMM::QUERY::InputDevice* Query::release_input() {
  // @@protoc_insertion_point(field_release:ORION_COMM.QUERY.Query.input)
  if (has_input()) {
    clear_has_cmd_content();
    ::ORION_COMM::QUERY::InputDevice* temp = cmd_content_.input_;
    cmd_content_.input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Query::set_allocated_input(::ORION_COMM::QUERY::InputDevice* input) {
  clear_cmd_content();
  if (input) {
    set_has_input();
    cmd_content_.input_ = input;
  }
  // @@protoc_insertion_point(field_set_allocated:ORION_COMM.QUERY.Query.input)
}

bool Query::has_cmd_content() const {
  return cmd_content_case() != CMD_CONTENT_NOT_SET;
}
void Query::clear_has_cmd_content() {
  _oneof_case_[0] = CMD_CONTENT_NOT_SET;
}
Query::CmdContentCase Query::cmd_content_case() const {
  return Query::CmdContentCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace QUERY
}  // namespace ORION_COMM

// @@protoc_insertion_point(global_scope)
