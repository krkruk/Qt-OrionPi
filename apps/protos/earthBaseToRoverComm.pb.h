// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: earthBaseToRoverComm.proto

#ifndef PROTOBUF_earthBaseToRoverComm_2eproto__INCLUDED
#define PROTOBUF_earthBaseToRoverComm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ORION_COMM {
class Chassis;
class ChassisDefaultTypeInternal;
extern ChassisDefaultTypeInternal _Chassis_default_instance_;
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
}  // namespace ORION_COMM

namespace ORION_COMM {

namespace protobuf_earthBaseToRoverComm_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_earthBaseToRoverComm_2eproto

enum Commands {
  Undefined = 0,
  Drive = 1,
  Commands_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Commands_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Commands_IsValid(int value);
const Commands Commands_MIN = Undefined;
const Commands Commands_MAX = Drive;
const int Commands_ARRAYSIZE = Commands_MAX + 1;

const ::google::protobuf::EnumDescriptor* Commands_descriptor();
inline const ::std::string& Commands_Name(Commands value) {
  return ::google::protobuf::internal::NameOfEnum(
    Commands_descriptor(), value);
}
inline bool Commands_Parse(
    const ::std::string& name, Commands* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Commands>(
    Commands_descriptor(), name, value);
}
// ===================================================================

class Chassis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ORION_COMM.Chassis) */ {
 public:
  Chassis();
  virtual ~Chassis();

  Chassis(const Chassis& from);

  inline Chassis& operator=(const Chassis& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Chassis& default_instance();

  static inline const Chassis* internal_default_instance() {
    return reinterpret_cast<const Chassis*>(
               &_Chassis_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Chassis* other);

  // implements Message ----------------------------------------------

  inline Chassis* New() const PROTOBUF_FINAL { return New(NULL); }

  Chassis* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Chassis& from);
  void MergeFrom(const Chassis& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Chassis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 leftRowAngularVelocity = 1;
  void clear_leftrowangularvelocity();
  static const int kLeftRowAngularVelocityFieldNumber = 1;
  ::google::protobuf::int32 leftrowangularvelocity() const;
  void set_leftrowangularvelocity(::google::protobuf::int32 value);

  // int32 rightRowAngularVelocity = 2;
  void clear_rightrowangularvelocity();
  static const int kRightRowAngularVelocityFieldNumber = 2;
  ::google::protobuf::int32 rightrowangularvelocity() const;
  void set_rightrowangularvelocity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ORION_COMM.Chassis)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 leftrowangularvelocity_;
  ::google::protobuf::int32 rightrowangularvelocity_;
  mutable int _cached_size_;
  friend struct protobuf_earthBaseToRoverComm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ORION_COMM.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  enum CmdMsgsCase {
    kDrive = 2,
    CMD_MSGS_NOT_SET = 0,
  };

  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const PROTOBUF_FINAL { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ORION_COMM.Commands cmdType = 1;
  void clear_cmdtype();
  static const int kCmdTypeFieldNumber = 1;
  ::ORION_COMM::Commands cmdtype() const;
  void set_cmdtype(::ORION_COMM::Commands value);

  // .ORION_COMM.Chassis drive = 2;
  bool has_drive() const;
  void clear_drive();
  static const int kDriveFieldNumber = 2;
  const ::ORION_COMM::Chassis& drive() const;
  ::ORION_COMM::Chassis* mutable_drive();
  ::ORION_COMM::Chassis* release_drive();
  void set_allocated_drive(::ORION_COMM::Chassis* drive);

  CmdMsgsCase cmd_msgs_case() const;
  // @@protoc_insertion_point(class_scope:ORION_COMM.Command)
 private:
  void set_has_drive();

  inline bool has_cmd_msgs() const;
  void clear_cmd_msgs();
  inline void clear_has_cmd_msgs();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int cmdtype_;
  union CmdMsgsUnion {
    CmdMsgsUnion() {}
    ::ORION_COMM::Chassis* drive_;
  } cmd_msgs_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_earthBaseToRoverComm_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Chassis

// int32 leftRowAngularVelocity = 1;
inline void Chassis::clear_leftrowangularvelocity() {
  leftrowangularvelocity_ = 0;
}
inline ::google::protobuf::int32 Chassis::leftrowangularvelocity() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.Chassis.leftRowAngularVelocity)
  return leftrowangularvelocity_;
}
inline void Chassis::set_leftrowangularvelocity(::google::protobuf::int32 value) {
  
  leftrowangularvelocity_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.Chassis.leftRowAngularVelocity)
}

// int32 rightRowAngularVelocity = 2;
inline void Chassis::clear_rightrowangularvelocity() {
  rightrowangularvelocity_ = 0;
}
inline ::google::protobuf::int32 Chassis::rightrowangularvelocity() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.Chassis.rightRowAngularVelocity)
  return rightrowangularvelocity_;
}
inline void Chassis::set_rightrowangularvelocity(::google::protobuf::int32 value) {
  
  rightrowangularvelocity_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.Chassis.rightRowAngularVelocity)
}

// -------------------------------------------------------------------

// Command

// .ORION_COMM.Commands cmdType = 1;
inline void Command::clear_cmdtype() {
  cmdtype_ = 0;
}
inline ::ORION_COMM::Commands Command::cmdtype() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.Command.cmdType)
  return static_cast< ::ORION_COMM::Commands >(cmdtype_);
}
inline void Command::set_cmdtype(::ORION_COMM::Commands value) {
  
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:ORION_COMM.Command.cmdType)
}

// .ORION_COMM.Chassis drive = 2;
inline bool Command::has_drive() const {
  return cmd_msgs_case() == kDrive;
}
inline void Command::set_has_drive() {
  _oneof_case_[0] = kDrive;
}
inline void Command::clear_drive() {
  if (has_drive()) {
    delete cmd_msgs_.drive_;
    clear_has_cmd_msgs();
  }
}
inline  const ::ORION_COMM::Chassis& Command::drive() const {
  // @@protoc_insertion_point(field_get:ORION_COMM.Command.drive)
  return has_drive()
      ? *cmd_msgs_.drive_
      : ::ORION_COMM::Chassis::default_instance();
}
inline ::ORION_COMM::Chassis* Command::mutable_drive() {
  if (!has_drive()) {
    clear_cmd_msgs();
    set_has_drive();
    cmd_msgs_.drive_ = new ::ORION_COMM::Chassis;
  }
  // @@protoc_insertion_point(field_mutable:ORION_COMM.Command.drive)
  return cmd_msgs_.drive_;
}
inline ::ORION_COMM::Chassis* Command::release_drive() {
  // @@protoc_insertion_point(field_release:ORION_COMM.Command.drive)
  if (has_drive()) {
    clear_has_cmd_msgs();
    ::ORION_COMM::Chassis* temp = cmd_msgs_.drive_;
    cmd_msgs_.drive_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Command::set_allocated_drive(::ORION_COMM::Chassis* drive) {
  clear_cmd_msgs();
  if (drive) {
    set_has_drive();
    cmd_msgs_.drive_ = drive;
  }
  // @@protoc_insertion_point(field_set_allocated:ORION_COMM.Command.drive)
}

inline bool Command::has_cmd_msgs() const {
  return cmd_msgs_case() != CMD_MSGS_NOT_SET;
}
inline void Command::clear_has_cmd_msgs() {
  _oneof_case_[0] = CMD_MSGS_NOT_SET;
}
inline Command::CmdMsgsCase Command::cmd_msgs_case() const {
  return Command::CmdMsgsCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ORION_COMM

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ORION_COMM::Commands> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ORION_COMM::Commands>() {
  return ::ORION_COMM::Commands_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_earthBaseToRoverComm_2eproto__INCLUDED
